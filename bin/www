import http from 'http'

import app from '../src/app.js'
import logger from '../src/middlewares/logger.js'

const port = normalizePort(normalizePort(process.env.APP_PORT || '3030'))
app.set('port', port)

const server = http.createServer(app.callback())

server.listen(port)
server.on('error', onError)
server.on('listening', onListening)

function normalizePort(val) {
  const port = parseInt(val, 10)
  if (isNaN(port)) {
    return val
  }

  if (port > 0) {
    return port
  }

  return false
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof address === 'string' ? address : address.port

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  const address = server.address()
  const bind = typeof address === 'string' ? address : address.port
  logger.info('Server is listening on: ', bind)
}
